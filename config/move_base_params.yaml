controller_frequency: 10.0
controller_patience: 3.0
planner_frequency: 0.0 # global planner only run when new goal or path blocked
planner_patience: 5.0

recovery_behavior_enabled: true
clearing_rotation_allowed: false
shutdown_costmaps: true # shutdown costmaps when move_base is inactive
oscillation_timeout: 10.0 # time to allow for oscillation before executing recovery behaviors
oscillation_distance: 0.5

recovery_behaviors:
  - name: 'super_conservative_reset1'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'conservative_reset1'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'aggressive_reset1'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'clearing_rotation1'
    #type: 'rotate_recovery/RotateRecovery'
  #- name: 'super_conservative_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'conservative_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'aggressive_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'clearing_rotation2'
    #type: 'rotate_recovery/RotateRecovery'

# Reverts costmap to static map outside of reset_distance and clears unknown space around robot
super_conservative_reset1:
  reset_distance: 2.0 # distance from robot beyond which obstacles will be cleared from costmap
  layer_names: ["obstacle_layer"]
conservative_reset1:
  reset_distance: 1.0
  layer_names: ["obstacle_layer"]
aggressive_reset1:
  reset_distance: 0.0
  layer_names: ["obstacle_layer"]
#super_conservative_reset2:
  #reset_distance: 3.0
#conservative_reset2:
  #reset_distance: 1.5
#aggressive_reset2:
  #reset_distance: 0.0
