<?xml version="1.0"?>
<launch>
	<!-- valid for summitxl - summitxl hl - summitxl hls -->
	<!-- The environment variables should be set in a file or .bashrc -->

	<arg name="id_robot" default="$(optenv ROBOT_ID summit_xl)"/>
	<arg name="xacro_robot_a" default="irlab_summit_xls_std.urdf.xacro"/>
	<!-- 2D LASERS -->
	<arg name="has_scanse_lasers" default="$(optenv ROBOT_HAS_SCANSE_LASERS true)"/>
	
	<!-- not used -->
	<arg name="has_front_laser" default="$(optenv ROBOT_HAS_FRONT_LASER false)"/>
	<arg name="front_laser_model" default="$(optenv ROBOT_FRONT_LASER_MODEL hokuyo_ust)"/>
	<arg name="front_laser_port" default="$(optenv ROBOT_FRONT_LASER_PORT /dev/ttyACM_FRONT_LASER)"/>
	<arg name="front_laser_ip" default="$(optenv ROBOT_FRONT_LASER_IP 192.168.0.10)"/>
	<arg name="front_laser_node" default="front_laser"/>

	<arg name="has_rear_laser" default="$(optenv ROBOT_HAS_REAR_LASER false)"/>
	<arg name="rear_laser_model" default="$(optenv ROBOT_REAR_LASER_MODEL hokuyo_ust)"/>
	<arg name="rear_laser_port" default="$(optenv ROBOT_REAR_LASER_PORT /dev/ttyACM_REAR_LASER)"/>
	<arg name="rear_laser_ip" default="$(optenv ROBOT_REAR_LASER_IP 192.168.0.11)"/>
	<arg name="rear_laser_node" default="rear_laser"/>

	<!-- PTZ CAMERAS -->
	<!-- not used -->
	<arg name="has_front_ptz_camera" default="$(optenv ROBOT_HAS_FRONT_PTZ_CAMERA false)"/>
	<arg name="front_ptz_camera_node" default="front_ptz_camera"/>
	<arg name="front_camera_ip" default="$(optenv ROBOT_FRONT_PTZ_CAMERA_IP 192.168.0.185)"/>
	<arg name="front_camera_model" default="$(optenv ROBOT_FRONT_CAMERA_MODEL axis_p5534)"/>


	<arg name="has_rear_ptz_camera" default="$(optenv ROBOT_HAS_REAR_PTZ_CAMERA false)"/>
	<arg name="rear_ptz_camera_node" default="rear_ptz_camera"/>
	<arg name="rear_camera_ip" default="$(optenv ROBOT_REAR_PTZ_CAMERA_IP 192.168.0.186)"/>
	<arg name="rear_camera_model" default="$(optenv ROBOT_REAR_CAMERA_MODEL axis_p5534)"/>

	<!-- RGBD CAMERAS -->
	<arg name="has_front_rgbd_camera" default="$(optenv ROBOT_HAS_FRONT_RGBD_CAMERA false)"/>
	<arg name="front_rgbd_camera_node" default="front_rgbd_camera"/>
	<arg name="front_rgbd_camera_id" default="$(optenv ROBOT_FRONT_RGBD_CAMERA_ID #1)"/>

	<!-- not used -->
	<arg name="has_rear_upper_rgbd_camera" default="$(optenv ROBOT_HAS_REAR_UPPER_RGBD_CAMERA false)"/>
	<arg name="rear_upper_rgbd_camera_node" default="rear_upper_rgbd_camera"/>
	<arg name="rear_upper_rgbd_camera_id" default="$(optenv ROBOT_REAR_UPPER_RGBD_CAMERA_ID #1)"/>

	<arg name="has_rear_rgbd_camera" default="$(optenv ROBOT_HAS_REAR_RGBD_CAMERA false)"/>
	<arg name="rear_rgbd_camera_node" default="rear_rgbd_camera"/>
	<arg name="rear_rgbd_camera_id" default="$(optenv ROBOT_REAR_RGBD_CAMERA_ID #1)"/>

	<!-- Other devices -->
	<arg name="has_gps" default="$(optenv ROBOT_HAS_GPS false)"/>
	<arg name="pad_model" default="$(optenv ROBOT_PAD_MODEL ps4)"/>

	<!-- Nav/Map Stack -->
	<arg name="launch_robot_localization" default="false"/>
	<arg name="omni" default="false"/>
	<arg name="launch_gmapping" default="false"/>
	<arg name="launch_amcl_and_mapserver" default="false"/>
	<arg name="map_file" default="empty/empty.yaml"/>
	<arg name="x_init_pose" default="0"/>
	<arg name="y_init_pose" default="0"/>
	<arg name="z_init_pose" default="0"/>

	<!-- Optional -->
	<arg name="launch_web_server" default="false"/>

	<group ns="$(arg id_robot)">

		<arg name="prefix" value="$(arg id_robot)_"/>

		<!-- start robot_state_publisher - publish fixed transforms, load robot model to param server -->
		<include file="$(find icclab_summit_xl)/launch/real/irlab_summit_xl_state_robot.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg name ="robot_model" value ="$(arg xacro_robot_a)"/>
		</include>

		<!-- start summit_xl_pad nodes -->
		<include file="$(find summit_xl_bringup)/launch/summit_xl_pad.launch">
			<arg name="pad_model" value="$(arg pad_model)"/>
		</include>

		<!-- start robotnik_base_hw nodes -->
		<include file="$(find summit_xl_bringup)/launch/robotnik_base_hw.launch">
			<arg name="prefix" value="$(arg prefix)"/>
		</include>
		<!-- start summit_xl_control nodes -->
		<include file="$(find summit_xl_control)/launch/summit_xl_control.launch">
			<arg name="prefix" value="$(arg prefix)"/>
		</include>
	
		<!-- start axis camera -->
		<include if="$(arg has_front_ptz_camera)" file="$(find summit_xl_bringup)/launch/axis.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg name="node_name" value="$(arg front_ptz_camera_node)"/>
			<arg name="id_robot" value="$(arg id_robot)"/>
			<arg name="ip_address" value="$(arg front_camera_ip)"/>
			<arg name="camera_model" value="$(arg front_camera_model)"/>
		</include>

		<include if="$(arg has_rear_ptz_camera)" file="$(find summit_xl_bringup)/launch/axis.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg name="node_name" value="$(arg rear_ptz_camera_node)"/>
			<arg name="id_robot" value="$(arg id_robot)"/>
			<arg name="ip_address" value="$(arg rear_camera_ip)"/>
			<arg name="camera_model" value="$(arg rear_camera_model)"/>
		</include>
		
                <!-- run realsense camera on arm -->
                <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
                  <arg name="camera" value="arm_camera"/>
                </include>

		<!-- start complementary_filter (imu filter) -->
		<!-- start px4 an open source flight control software -->
		<!-- start mavros node -->
		<include file="$(find summit_xl_bringup)/launch/pixhawk.launch"/>

		<include file="$(find summit_xl_localization)/launch/rl_utils.launch"/>

		<!-- start summit_xl_web server -->
		<include if="$(arg launch_web_server)" file="$(find summit_xl_web)/launch/summit_xl_web.launch"/>


		<!-- start rgbd camera node -->
		<include if="$(arg has_front_rgbd_camera)" file="$(find summit_xl_bringup)/launch/orbbec.launch">
			<arg name="camera" value="$(arg front_rgbd_camera_node)"/>
			<arg name="prefix" value="$(arg prefix)$(arg front_rgbd_camera_node)"/>
			<arg name="device_id" value="$(arg front_rgbd_camera_id)"/>
		</include>

		<include if="$(arg has_rear_rgbd_camera)" file="$(find summit_xl_bringup)/launch/orbbec.launch">
			<arg name="camera" value="$(arg rear_rgbd_camera_node)"/>
			<arg name="prefix" value="$(arg prefix)$(arg rear_rgbd_camera_node)"/>
			<arg name="device_id" value="$(arg rear_rgbd_camera_id)"/>
		</include>

		<include if="$(arg has_rear_upper_rgbd_camera)" file="$(find summit_xl_bringup)/launch/orbbec.launch">
			<arg name="camera" value="$(arg rear_upper_rgbd_camera_node)"/>
			<arg name="prefix" value="$(arg prefix)$(arg rear_upper_rgbd_camera_node)"/>
			<arg name="device_id" value="$(arg rear_upper_rgbd_camera_id)"/>
		</include>

		<!-- start system monitor node-->
		<include file="$(find system_monitor)/launch/system_monitor.launch">
		</include>


	</group>

</launch>

